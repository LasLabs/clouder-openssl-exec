#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright 2016 LasLabs Inc.
# License LGPL-3.0 or later (http://www.gnu.org/licenses/lgpl.html).

from __future__ import print_function

import argparse
import pickle

from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives.serialization import Encoding
from cryptography.hazmat.primitives import hashes
from cryptography import x509


def parse_cert(self, cert):
    """ It parses a PEM encoded certificate and returns the attrs. """
    cert = x509.load_pem_x509_certificate(
        cert,
        default_backend(),
    )
    enc_pem = Encoding('PEM')
    extensions = {}
    for extension in cert.extensions:
        public_props = (
            n for n in dir(extension.value) if not n.startswith('_')
        )
        extensions[extension.oid._name] = {
            'oid': extension.oid.dotted_string,
        }
        for prop in public_props:
            if prop == 'oid':
                continue
            try:
                value = getattr(extension.value, prop)
            except ValueError:
                continue
            if callable(value):
                continue
            extensions[extension.oid._name][prop] = value
    return {
        'serial': cert.serial,
        'fingerprint': cert.fingerprint(hashes.SHA256()),
        'public_key': cert.public_bytes(enc_pem),
        'not_valid_before': cert.not_valid_before,
        'not_valid_after': cert.not_valid_after,
        'extensions': extensions,
    }


if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='Cert Parse CLI')
    parser.add_argument('cert',
                        help='PEM encoded certificate string to parse',
                        )
    args = parser.parse_args()
    cert_info = parse_cert(args.cert)
    print(
        pickle.dumps(cert_info.encode('base64')),
    )
